@startuml ArbreSyntaxique
object "Procedure" as Procedure
object "williamfaure" as williamfaure
object "Bloc" as Bloc
object "Bloc" as Bloc1
object "Déclaration" as Declaration
object "Déclaration" as Declaration1
object "Déclaration" as Declaration2
object "For" as InstructionFor
object "While" as InstructionWhile
object "sum_for" as sum_for
object "INTEGER" as INTEGER
object "0" as 0
object "sum_while" as sum_while
object "INTEGER" as INTEGER_
object "0" as 0_
object "j" as j
object "INTEGER" as INTEGER__
object "1" as 1
object "i" as i
object "1" as 1_
object "10" as 10
object "Affectation" as Affectation
object "INFERIEUR_EGAL" as Operation1
object "Bloc" as Bloc2
object "sum_for" as sum_for_
object "PLUS" as Operation
object "j" as j_
object "10" as 10_
object "Affectation" as Affectation1
object "Affectation" as Affectation2
object "sum_for" as sum_for__
object "i" as i_
object "sum_while" as sum_while_
object "PLUS" as Operation2
object "j" as j___
object "PLUS" as Operation3
object "sum_while" as sum_while__
object "j" as j__
object "j" as j____
object "1" as 1__
Procedure -down-> williamfaure
Procedure -down-> Bloc
Procedure -down-> Bloc1
Bloc -down-> Declaration
Bloc -down-> Declaration1
Bloc -down-> Declaration2
Bloc1 -down-> InstructionFor
Bloc1 -down-> InstructionWhile
Declaration -down-> sum_for
Declaration -down-> INTEGER
Declaration -down-> 0
Declaration1 -down-> sum_while
Declaration1 -down-> INTEGER_
Declaration1 -down-> 0_
Declaration2 -down-> j
Declaration2 -down-> INTEGER__
Declaration2 -down-> 1
InstructionFor -down-> i
InstructionFor -down-> 1_
InstructionFor -down-> 10
InstructionFor -down-> Affectation
InstructionWhile -down-> Operation1
InstructionWhile -down-> Bloc2
Affectation -down-> sum_for_
Affectation -down-> Operation
Operation1 -down-> j_
Operation1 -down-> 10_
Bloc2 -down-> Affectation1
Bloc2 -down-> Affectation2
Operation -down-> sum_for__
Operation -down-> i_
Affectation1 -down-> sum_while_
Affectation1 -down-> Operation2
Affectation2 -down-> j___
Affectation2 -down-> Operation3
Operation2 -down-> sum_while__
Operation2 -down-> j__
Operation3 -down-> j____
Operation3 -down-> 1__
@enduml
