@startuml ArbreSyntaxique
object "Procedure" as Procedure
object "fibonacci" as fibonacci
object "Bloc" as Bloc
object "Affectation" as Affectation
object "Fonction" as Fonction
object "Déclaration" as Declaration
object "Déclaration" as Declaration1
object "var2" as var2_
object "Operation" as Operation5
object "fib" as fib
object "Paramètre" as Parametre
object "INTEGER" as INTEGER_
object "Bloc" as Bloc1
object "If" as InstructionIf
object "var1" as var1
object "INTEGER" as INTEGER__
object "var2" as var2
object "INTEGER" as INTEGER___
object "Operation" as Operation6
object "MOINS" as MOINS____
object "5" as 5
object "n" as n
object "INTEGER" as INTEGER
object "Operation" as Operation
object "Return" as Return
object "If" as InstructionIf1
object "Operation" as Operation7
object "PLUS" as PLUS__
object "4" as 4
object "n" as n_
object "EGAL" as EGAL
object "0" as 0
object "0" as 0_
object "Operation" as Operation1
object "Return" as Return1
object "Return" as Return2
object "Operation" as Operation8
object "PLUS" as PLUS_
object "3" as 3
object "n" as n__
object "EGAL" as EGAL_
object "1" as 1
object "1" as 1_
object "Operation" as Operation2
object "Operation Unaire" as OperationUnaire
object "MOINS" as MOINS___
object "2" as 2_
object "Appel Fonction" as AppelFonction
object "PLUS" as PLUS
object "Appel Fonction" as AppelFonction1
object "MOINS" as MOINS__
object "1" as 1___
object "fib" as fib_
object "Operation" as Operation3
object "fib" as fib__
object "Operation" as Operation4
object "n" as n___
object "MOINS" as MOINS
object "1" as 1__
object "n" as n____
object "MOINS" as MOINS_
object "2" as 2
Procedure -down-> fibonacci
Procedure -down-> Bloc
Procedure -down-> Affectation
Bloc -down-> Fonction
Bloc -down-> Declaration
Bloc -down-> Declaration1
Affectation -down-> var2_
Affectation -down-> Operation5
Fonction -down-> fib
Fonction -down-> Parametre
Fonction -down-> INTEGER_
Fonction -down-> Bloc1
Fonction -down-> InstructionIf
Declaration -down-> var1
Declaration -down-> INTEGER__
Declaration1 -down-> var2
Declaration1 -down-> INTEGER___
Operation5 -down-> Operation6
Operation5 -down-> MOINS____
Operation5 -down-> 5
Parametre -down-> n
Parametre -down-> INTEGER
InstructionIf -down-> Operation
InstructionIf -down-> Return
InstructionIf -down-> InstructionIf1
Operation6 -down-> Operation7
Operation6 -down-> PLUS__
Operation6 -down-> 4
Operation -down-> n_
Operation -down-> EGAL
Operation -down-> 0
Return -down-> 0_
InstructionIf1 -down-> Operation1
InstructionIf1 -down-> Return1
InstructionIf1 -down-> Return2
Operation7 -down-> Operation8
Operation7 -down-> PLUS_
Operation7 -down-> 3
Operation1 -down-> n__
Operation1 -down-> EGAL_
Operation1 -down-> 1
Return1 -down-> 1_
Return2 -down-> Operation2
Operation8 -down-> OperationUnaire
Operation8 -down-> MOINS___
Operation8 -down-> 2_
Operation2 -down-> AppelFonction
Operation2 -down-> PLUS
Operation2 -down-> AppelFonction1
OperationUnaire -down-> MOINS__
OperationUnaire -down-> 1___
AppelFonction -down-> fib_
AppelFonction -down-> Operation3
AppelFonction1 -down-> fib__
AppelFonction1 -down-> Operation4
Operation3 -down-> n___
Operation3 -down-> MOINS
Operation3 -down-> 1__
Operation4 -down-> n____
Operation4 -down-> MOINS_
Operation4 -down-> 2
@enduml
